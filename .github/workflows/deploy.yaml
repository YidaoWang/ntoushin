name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/yida01.pem
        chmod 600 ~/.ssh/yida01.pem

        echo "Host step01" > ~/.ssh/config
        echo "  HostName 35.73.63.109" >> ~/.ssh/config
        echo "  User ec2-user" >> ~/.ssh/config
        echo "  Port 22" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/yida01.pem" >> ~/.ssh/config

        echo "Host yida01" >> ~/.ssh/config
        echo "  HostName 10.0.132.235" >> ~/.ssh/config
        echo "  User ec2-user" >> ~/.ssh/config
        echo "  Port 22" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/yida01.pem" >> ~/.ssh/config
        echo "  ProxyCommand ssh -W %h:%p step01" >> ~/.ssh/config

        ssh-keyscan -H 35.73.63.109 >> ~/.ssh/known_hosts
        ssh-keyscan -H 10.0.132.235 >> ~/.ssh/known_hosts

        # Test SSH connection to bastion host
        ssh -i ~/.ssh/yida01.pem ec2-user@35.73.63.109 'echo "SSH to bastion host successful"'

        # Test SSH connection to private EC2 instance via bastion host
        ssh -i ~/.ssh/yida01.pem ec2-user@10.0.132.235 -o "ProxyCommand ssh -W %h:%p ec2-user@35.73.63.109" 'echo "SSH to private EC2 instance successful"'

    - name: Deploy to EC2
      run: |
        scp -o StrictHostKeyChecking=no -r ./build ec2-user@step01:/tmp/build
        ssh -o StrictHostKeyChecking=no step01 "scp -o StrictHostKeyChecking=no -r /tmp/build ec2-user@yida01:/var/app"
